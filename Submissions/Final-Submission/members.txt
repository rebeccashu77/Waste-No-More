Griffin Malm (gtm7) - I was happy to use my idea of a virtual fridge that helps eliminate food waste as my team’s class project. Throughout the project, I have been very involved with the backend of the system - helping to generate the schema and E/R diagrams, as well as build the create.sql and load.sql files that built the database in PostgreSQL. After helping figure out the user-flow of our website, I was responsible for running and building the SQL queries that would be necessary for our application. I continually iterated the structure and schema of our database to reflect our evolving needs and priorities associated with the project, including major actions such as implementing arrays in our PostgreSQL load file (to keep track of a user’s dietary restrictions) and removing the Recipes relation from the schema (in favor of using the Edamam Recipe API). In addition, I compiled a large amount of data about expiration dates for various food items (which can be used to suggest expiration dates as users enter their foods into their fridge). Since Milestone 2, I have done extensive research as to how to use and access the Edamam Recipe API - although we were unable to implement this feature due to time constraints (as mentioned in the Final Report), we have the tools to do so. When the heavy coding began, the team realized that we would be using Google Firestore as our database management system, opposed to PostgreSQL. Firestore is a NoSQL framework, meaning we had to move and adjust our data and database configurations to work with the new framework. Firestore offers many features relating to optimization of databases (including generating keys and indices) and guarding against SQL injection attacks, rendering some of my old work optimizing the PostgreSQL implementation (including setting keys, indices, and triggers) null. However, I was able to work with Jeevan and Jonathan to reorient our DBMS and ensure that our back-end system was set up for communication with the front-end. Along with Rebecca and Christina, I generated the Final Report - this has been a task I have done at every Milestone, as I have worked to synthesize the information surrounding our project in the most presentable way possible. This includes the compilation of all files associated with each submission. I had fun doing this project - it was inspiring to see a project idea of mine come to fruition. I have not only gained technical skills, but have also bolstered my soft skills, including communication and navigating team roles. This project gave me a good experience to work as a “team lead” of sorts, as I was the person primarily responsible for delivering the backend of the project. While our team ran into several challenges, I learned a lot along the way. 

Christina Le - For this project, I first focused on the design of WasteNoMore to draft out the functionalities we wanted to implement. This design laid out how we approached building the application. After completing the design, I then worked primarily with Rebecca to build the frontend components of the website using React. I had never coded in React before, so I watched a couple of tutorials before building out the home page, sign up page, confirmation page, and fridge page. Luckily, most of the React components were dependent on HTML and CSS, which I was familiar with. Rebecca and I built out the basic framework for each of the pages listed above as closely to the original design as we could without spending too long on the specific stylings to make it easier for middle-end and backend to implement functionality into the pages. When handing off the frontend to the backend, Rebecca and I worked with Jonathan and Jeevan to explain the basics behind the framework and determine what was practical for the timeline we were given. The first feature we decided to implement was the sign in/sign up feature. From there, I looked up possible ways to deploy the web application including Heroku and GitHub Pages, but we ended up deploying through Firebase. Unfortunately, we were not able to implement every detail of the initial design with functionality as we had hoped, but these are all functionalities that can be added for future versions of the website.

Rebecca Shu - For this project, I primarily worked with Christina on building the frontend design of the website to make the website the most user friendly and clean as possible. I started out by creating a React App, and from there began building the home page, sign up page, confirmation page, and fridge page, and other pages leading up to the goal of being able to perform initial functions, such as signing up for an account. Christina and I both worked on the design and rendering of the pages so that they would look and function in the way we had planned, and tried following as closely as we could to our original design plan. From there we worked with both Jeevan and Jonathan to explore the functionality portion of the website, where some of the frontend code had to be modified to fit our functionality needs. After we were able to complete the initial function of being able to sign up for an account and sign in to an existing account for milestone 2, I began building the rest of the pages that were in our original design, hoping to get them done as quickly as possible so that the backend team could get working on the functionality. I created and built the final additional pages, including a delete page, a recipe page, a my account page, and an updated fridge page. Unfortunately, for the final design, as a group we realized that much of the functionality that we had originally hoped for and planned for would not be possible given the time constraints, so some of the additional pages I had created could not be used in the final project demo. However, they are certainly able to be implemented in future design plans for this project.

Jeevan Tewari - In this project Jonathan and I were in charge of connecting the front end to the backend Firebase/Firestore dbms.  We implemented a variety of libraries in react including redux, thunk, react-firestore and employed these libraries to facilitate connections between the frontend and the backend. We decided to use the reducer system offered by Redux to manage the state of the react components and then made asynchronous calls using dispatches to update the backend. Engaging in these niche parts of react-redux was extremely eye opening for me because a simple task - like deleting an entry in one user’s fridge - took hundreds of lines of codes across several components. Additionally, we learned how to store and process different types of data like strings, timestamps, and booleans in order to orchestrate the data returns in the front end. I was also in charge of deploying our website using the services provided in firebase. The framework provided by Rebecca and Christina allowed Jonathan and I to focus our efforts on deep dives into these libraries and their implementations in react while the advice from Griffin about how queries and relations (called collections in Firestore) helped us reorient the DBMS.

Jonathan Yu - Throughout this project, I worked with Jeevan on linking our frontend design to our backend database. Specifically, we decided to use Google’s Firebase and its cloud-based Firestore as our DBMS. Through this software, we focused on adding various functionality to our web application. This included creating the concept of users and their fridges in our database. Early on, we implemented user authentication based around user emails as ids and keys. Then, each authenticated user was associated with their own fridge, which would display food they had placed in their fridge. For these features, we used React.js, Redux (centralized management of our components’ data and state), and various third-party packages. As a result, as Jeevan mentioned, we ran into a lot of obstacles with our work. Implementing singular features took a lot of time and code to accomplish, and we had to spend a lot of time researching and learning about the new software. In the most recent weeks, Jeevan and I worked on some of the more critical features of our project. Namely, we added a more convenient method for adding and deleting items from one’s fridge (after logging in). This involved heavy use of react-redux in order to modify and store data, such as food name and expiration date. Also, I found a package that allowed for the expiration date to be chosen on an on-screen calendar, which Jeevan helped implement. We also helped Griffin move our data to a NoSQL framework (which is used by Firestore) for our production dataset. In the end, Jeevan and I did a lot of work with React to add functionality to our application, running into some challenges but also learning a lot along the way.