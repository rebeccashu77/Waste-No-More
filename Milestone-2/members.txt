Griffin Malm (gtm7) - For this milestone, all of my work took place on the backend. To begin with, I changed the structure and schema of the database to reflect our new needs and priorities. This included replacing the 6 dietary restrictions (pescetarian, vegetarian, vegan, dairy_free, gluten_free, and peanut_allergy) in the Users table with a single array that contains a binary variable indicating whether or not that user has a dietary restriction. Furthermore, I decided to completely abandon the Recipes relation. This was because recipes will be found using the Edamam API (which I was able to get a free license with, since I am a student), opposed to being stored in the database and found via a query. I reflected these changes in an updated E/R diagram, which is included in the progress report. For the production dataset, the biggest need for the team was to obtain a large list of different foods and their expiration dates. I did this manually by finding expiration dates for a variety of foods on eatbydate.com. In addition, I created a massive amount of sample user data to make the results for our queries larger. In test-production.sql, I removed the query that finds the recipes to suggest to a user, since we no longer have the recipes database. I added several queries that will allow the user to add foods to their fridge in a variety of ways: add-by-search, add-by-type, and add-from-all. I also added queries to view the items in a users fridge and the items that will be expiring soon. I ran these queries to generate test-production.out, which has the data returned by the queries in test-production.sql. In order to improve the performance of the database, I added two indexes: one for the food type in the possible goods database, and one for the expiration dates in the fridge database. In general, our database has a lot of unique fields that act as indexes, but the two I added will help with improving performance. In the README file, I included information on how the API works. Lastly, I compiled the final submission for Milestone 2. 

Jeevan Tewari (jmt62) - After the website template was created by Rebecca and Christina, Jonathan and I worked on implementing functionality into it. We used Firebase to create the sign in and sign up features with users being stored in our Firebase project. The main functionality implemented was creating two different states in the webpage - the ‘user’ state is enabled after someone has signed in or signed up and has certain features available to it that are inaccessible to the ‘nonuser’ state. Now we are exploring ways for the web page to exchange data with our Firestore database getting closer to full functionality of our database.

Rebecca Shu (rjs73) - For this milestone, I primarily worked with Christina on building the frontend design of the website. I started out by creating a React App, and from there began building the home page, sign up page, confirmation page, and fridge page, and other pages leading up to the goal of being able to perform initial functions, such as signing up for an account. Christina and I both worked on the design and rendering of the pages so that they would look and function in the way we wanted, and tried following as closely as we could to our original design plan. From there we worked with both Jeevan and Jonathan to explore the functionality portion of the website, where some of the frontend code had to be modified to fit our functionality needs. Overall, I believe that we are on the right track and have made good progress, and our final demonstration I plan to help build the remaining pages of the website, as we continue to work with the whole team to get the website up and running how we want it to.

Christina Le (cll58) - For this milestone, I familiarized myself with React and then worked with Rebecca to build out the initial pages of the web application after starting on the home page and going through the sign-up or sign-in process of logging onto your fridge’s account. After building out the framework, Rebecca and I also worked with Jonathan and Jeevan to explain the structure of the framework so that the javascript functions for functionality could be implemented. I tried to turn reusable features seen throughout the page into components that can be used and styled through a master style sheet. Responsiveness was something I kept in the back of my mind, but this will have to be improved in the upcoming weeks. Additionally, we came across situations where we realized that our design was missing a couple of pages, such as the page to enter an expiration date, so I also added that page to the design prototype. We also met up as a team multiple times to divide the work and compile a game plan for the remaining items of the milestone/project.

Jonathan Yu (jy178) - For this milestone, I worked with Jeevan on setting up our database and connecting it to the frontend template. The two of us chose to use Google’s Firebase and Firebase’s Firestore (a cloud database) as our framework and began setting it up. Specifically, we implemented user authentication/creation functionality and proper redirecting from the ‘Sign-In’ and ‘Sign-Up’ pages to the ‘Fridge’ page (where a user’s foods will be displayed in the future). We started implementing the functionality for our web application to store each user’s foods and display them after sign-in. This feature has not yet been completed but will be soon.